esphome:
  name: ttgodisplay
  platform: ESP32
  board: esp32dev

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "somepassword"
ota:
  password: "somepassword"
  
wifi:
  ssid: "yourwifissid"
  password: "yourwifipassword"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Co2Sensor fallback Hotspot"
    password: "somepassword"
i2c:
  id: bus_a
  sda: GPIO21
  scl: GPIO22
  scan: True
  
sensor:
  - platform: scd30
    address: 0x61
    i2c_id: bus_a
    automatic_self_calibration: true
    co2:
      name: "CO2"
      id: "co2data"
      accuracy_decimals: 1
    temperature:
      name: "Temperature CO2"
      id: "co2temp"
      accuracy_decimals: 1
    humidity:
      name: "Humidity CO2"
      id: "co2humid"
      accuracy_decimals: 1
    update_interval: 2s
    
color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: my_green
    red: 0%
    green: 100%
    blue: 0%
  - id: my_blue
    red: 0%
    green: 0%
    blue: 100%
  - id: my_gray
    red: 50%
    green: 50%
    blue: 50%

font:
  - file: "Helvetica.ttf"
    id: helvetica_46
    size: 46
  - file: "Helvetica.ttf"
    id: helvetica_24
    size: 24
  - file: "Helvetica.ttf"
    id: helvetica_12
    size: 12
  - file: "Helvetica.ttf"
    id: helvetica_8
    size: 8

binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status
  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
      mode: INPUT_PULLUP
    name: "T-Display Button Input 0"
    id: tdisplay_button_input_0
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: "T-Display Button Input 1"
    id: tdisplay_button_input_1

# We can still control the backlight independently from HomeAssistant
switch:
  - platform: gpio
    pin: GPIO4
    name: "Backlight"
    id: backlight

image:
  - file: "image.png"
    id: my_image
    resize: 90x90
    type: RGB24

time:
  - platform: homeassistant
    id: esptime

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

display:
  - platform: st7789v
    backlight_pin: GPIO4
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 270
    lambda: |-
      it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_blue));
      it.rectangle(0, 20, it.get_width(), it.get_height(), id(my_blue));   // header bar
      
      //To Display Date comment out the line and set corrdinates
      // time it.strftime((240 / 2), (140 / 4) * 1 + 5, id(helvetica_24), id(my_gray), TextAlign::CENTER, "%Y-%m-%d", id(esptime).now())
      
      //Live data output
      it.printf(212, 33, id(helvetica_46), id(my_green), TextAlign::TOP_RIGHT, "%0.0f", id(co2data).state);
      it.printf(130,95, id(helvetica_12), id(my_yellow), TextAlign::TOP_LEFT, "%0.1fÂ°C", id(co2temp).state);
      it.printf(194,95, id(helvetica_12), id(my_blue), TextAlign::TOP_LEFT,  "%0.1f%%", id(co2humid).state);
      
      
      //Static Stuff
      it.print(5, 5, id(helvetica_12), id(my_yellow), TextAlign::TOP_LEFT, "CO2 Monitor");
      it.print(215, 65, id(helvetica_12), id(my_green), TextAlign::TOP_LEFT, "ppm");
      it.print(130, 112, id(helvetica_12), id(my_yellow), TextAlign::TOP_LEFT, "Temp");
      it.print(194, 112, id(helvetica_12), id(my_blue), TextAlign::TOP_LEFT, "RH");
      
      // Image display (so far its static, but you can write if conditions to display differnt images based on co2data readings)
      it.image(10, 35, id(my_image));
      
      //Condional Text Display
      if (id(system_status).state) {
        it.print(235, 5, id(helvetica_12), id(my_green), TextAlign::TOP_RIGHT, "Online");
      }
      else {
        it.print(235, 5, id(helvetica_12), id(my_red), TextAlign::TOP_RIGHT, "Offline");
      }

captive_portal:
